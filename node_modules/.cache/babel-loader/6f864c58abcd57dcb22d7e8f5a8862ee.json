{"ast":null,"code":"var _jsxFileName = \"/Users/simoneanthony/Desktop/personal-projects/blackjack-takehome/src/components/GameArena.tsx\",\n  _s = $RefreshSig$();\n// import axios from \"axios\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { fetchNewDeck, drawCards } from \"../API/getRequests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameArena() {\n  _s();\n  const [playerTurn, setPlayerTurn] = useState(false);\n  const [deckId, setDeckId] = useState(null);\n  // const [playerDrawCard, setPlayerDrawCard] = useState(false);\n  const [playersCards, setPlayersCards] = useState([]);\n  const [computersCards, setComputersCards] = useState([]);\n  const drawCard = useCallback(() => {\n    if (deckId) {\n      // else it is players turn to pick a card\n      (async () => {\n        const {\n          data: {\n            cards\n          }\n        } = await drawCards(deckId);\n        // add card to playersCards\n        setPlayersCards(prevState => [...prevState, ...cards]);\n        // the player is done drawing a card\n        setPlayerTurn(false);\n      })();\n    }\n  }, [deckId]);\n  useEffect(() => {\n    (async () => {\n      // create a deck\n      const {\n        data: {\n          deck_id\n        }\n      } = await fetchNewDeck();\n\n      // save the deck_id to state\n      setDeckId(deck_id);\n    })();\n  }, []);\n  useEffect(() => {\n    if (!deckId) return;\n\n    // initial cards for computer and player\n    (async () => {\n      // computer draws cards\n      const {\n        data: {\n          cards: computersCards\n        }\n      } = await drawCards(deckId, 2);\n      setComputersCards(computersCards);\n\n      // player draws cards\n      const {\n        data: {\n          cards: playerCards\n        }\n      } = await drawCards(deckId, 2);\n      setPlayersCards(playerCards);\n\n      // change turns\n      setPlayerTurn(true);\n    })();\n  }, [deckId]);\n  const playerDraw = () => {\n    // setPlayerDrawCard(true);\n    drawCard();\n  };\n  useEffect(() => {\n    console.log(\"playersCards\", playersCards);\n    console.log(\"computersCards\", computersCards);\n  }, [computersCards, playersCards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-arena\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"game-panel panel-one\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Computer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"game-panel panel-two\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => playerDraw(),\n        children: \"Hit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Stand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n}\n_s(GameArena, \"2Mz9C0sT52Q+gpX8IoiH82hcPLo=\");\n_c = GameArena;\nexport default GameArena;\nvar _c;\n$RefreshReg$(_c, \"GameArena\");","map":{"version":3,"names":["useState","useEffect","useCallback","fetchNewDeck","drawCards","GameArena","playerTurn","setPlayerTurn","deckId","setDeckId","playersCards","setPlayersCards","computersCards","setComputersCards","drawCard","data","cards","prevState","deck_id","playerCards","playerDraw","console","log"],"sources":["/Users/simoneanthony/Desktop/personal-projects/blackjack-takehome/src/components/GameArena.tsx"],"sourcesContent":["// import axios from \"axios\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { fetchNewDeck, drawCards } from \"../API/getRequests\";\n\nexport interface ICard {\n  code: string;\n  image: string;\n  images: {\n    svg: string;\n    png: string;\n  };\n  value: string;\n  suit: string;\n}\n\nfunction GameArena() {\n  const [playerTurn, setPlayerTurn] = useState(false);\n  const [deckId, setDeckId] = useState<null | string>(null);\n  // const [playerDrawCard, setPlayerDrawCard] = useState(false);\n  const [playersCards, setPlayersCards] = useState<ICard[]>([]);\n  const [computersCards, setComputersCards] = useState<ICard[]>([]);\n\n  const drawCard = useCallback(() => {\n  if (deckId) {\n      // else it is players turn to pick a card\n      (async () => {\n        const {\n          data: { cards },\n        } = await drawCards(deckId);\n        // add card to playersCards\n        setPlayersCards(prevState => [...prevState, ...cards]);\n        // the player is done drawing a card\n        setPlayerTurn(false);\n      })();\n    }\n  }, [deckId]);\n\n\n  useEffect(() => {\n    (async () => {\n      // create a deck\n      const {\n        data: { deck_id },\n      } = await fetchNewDeck();\n\n      // save the deck_id to state\n      setDeckId(deck_id);\n\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (!deckId) return;\n\n    // initial cards for computer and player\n    (async () => {\n      // computer draws cards\n      const {\n        data: { cards: computersCards },\n      } = await drawCards(deckId, 2);\n\n      setComputersCards(computersCards);\n\n      \n      // player draws cards\n      const {\n        data: { cards: playerCards },\n      } = await drawCards(deckId, 2);\n\n      setPlayersCards(playerCards);\n\n      // change turns\n      setPlayerTurn(true);\n    })();\n  }, [deckId]);\n\n  const playerDraw = () => {\n    // setPlayerDrawCard(true);\n    drawCard();\n  }\n\n  useEffect(() => {\n    console.log(\"playersCards\", playersCards);\n    console.log(\"computersCards\", computersCards);\n  }, [computersCards, playersCards]);\n\n  return <div className=\"game-arena\">\n    <section className=\"game-panel panel-one\">\n    <div>Computer</div>\n    </section>\n    <section className=\"game-panel panel-two\">\n    <div>User</div>\n\n    <button type=\"button\" onClick={() => playerDraw()}>\n      Hit\n    </button>\n    <button type=\"button\">\n      Stand\n    </button>\n  </section>\n  </div>\n}\n\nexport default GameArena;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}